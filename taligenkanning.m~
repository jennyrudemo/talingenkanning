
%Program för talingenkänning med hjälp av MFCC och Dynamic Time Warping
%Metoden som används beskrivs här:
%https://zenodo.org/record/1074387#.X2EHFD9xdEY
%http://www.rroij.com/open-access/isolated-speech-recognitionusing-mfcc-and-dtw.pdf
%https://www.irjet.net/archives/V5/i2/IRJET-V5I2408.pdf
%
%Matlabs inbyggda funktioner för MFCC och DTW utnyttjas.
%-------------------------------------------------------------------------------

clear all

%Läs in ordet som ska testas.
%För detta finns två alternativ: läsa in en förinspelad wav-fil eller läsa 
%in ett ord i realtid, medan programmet körs.

%Inläsning av förinspelat ord
%     [testord,fs] = audioread('ljud/tjej3.wav'); %spara ljudet i variabeln test
%     soundsc(testord,fs);

%Inläsning av ord i realtid
%Skapa audiorecorder
    fs = 44100; %sampelfrekvens för audiorecorder
    recorder = audiorecorder(fs,16,1); %8 eller 16 bitar, liveigenkänning tycks fungera bättre med 16 bitar
    
    disp('Börja prata.')
    recordblocking(recorder,2);
    disp('Sluta prata.')
    
    play(recorder);
    
    testord = getaudiodata(recorder); %spara ljudet i variabeln test

%Lista med referensord för att identifiera rätt ord och hitta motsatsord
ord = ["ja", "nej", "vinter" , "sommar", "sol", "mane", "varmt", "kallt", "motsatsord", "synonym"];
antalOrd = length(ord); %antal ord i ordlistan
refMangd = 14; %antal inspelningar av respektive referens som används som träningsdata

koeff = 14; % 1-14. Antalet MFCC-koefficienter som används.

%Ta bort ev nollor och oändliga värden i testljudfilen
%På detta sätt försvinner tysta partier i början och slutet av ljudfilen
%En nackdel är att även tysta partier inuti ordet försvinner
testord = testord(testord~=0 & isfinite(testord));

%Beräkna MFCC för testordet
testkoeffs = mfcc(testord,fs);
testValdaKoeffs = transpose(testkoeffs(:,1:koeff)); %Önskat antal koefficienter väljs ut

distanslista=zeros(1,refMangd); %lagrar avstånd mellan testordet och respektive inspelning av ett referensord
medeldistans=zeros(1,antalOrd); %lagrar medelavståndet till testordet för varje referensord 

%Loopar igenom varje ord i ordlistan
for i=1:antalOrd
 
    %Loopar igenom varje inspelning av ordet
    for j=1:refMangd
        
        %Läs i referensord
        filnamn='ljud/'+ord(i)+j+'.wav';
        [referensord,fs]=audioread(filnamn);
        
        %Ta bort ev nollor och oändliga värden i ljudfilen
        referensord=referensord(referensord~=0 & isfinite(referensord));
        
        %Beräkna MFCC för referensorden
        refcoeffs = mfcc(referensord,fs);
        reffirstcoeffs = transpose(refcoeffs(:,1:koeff));
        
        %Beräkna avstånde mellan testordets och referensordets
        %MFCC-koeficcienter
        distans=dtw(testValdaKoeffs, reffirstcoeffs);
        
        %Lagra avståndet i lista med avstånd
        distanslista(j)=distans;
        
    end
    
    %Beräkna medelavståndet till testordet, för varje ord i ordlistan
    medeldistans(i)=mean(distanslista);
    
end

%Ta fram minsta avståndet och koppla till ord i ordlistan
[dist,ordnummer] = min(medeldistans);
rattord=ord(ordnummer);

%Slumpa siffra
nr=randi([1 15],1,1);

%Hitta motsatsord
if mod(ordnummer,2)==0
    motsatsord=ord(ordnummer-1);
else
    motsatsord=ord(ordnummer+1);
end

%Spela upp slumpmässigt vald inspelning av motsatsordet
filnamn='ljud/'+motsatsord+nr+'.wav';
[sound, fs] = audioread(filnamn);
soundsc(sound,fs);


%Egentligen borde det vara betydlig fler exempel av varje referensord så det blir
%mer träffsäkert (kanske med någon form av medelvärde som beräknas till alla ord som är samma?).

%Kan också vara ide att testa att lägga till MFCC-deltan (som i . Darabk etc. den första länken ovan). Se dokumentation
%för MFCC hur de tas fram.

%Lycka till!




